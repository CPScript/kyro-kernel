# Kyro OS Build System
# Assembler and tools
ASM = nasm
DD = dd
QEMU = qemu-system-i386

# Directories
BOOT_DIR = boot

# Output files
BOOTLOADER = $(BOOT_DIR)/test_boot.bin
KERNEL = $(BOOT_DIR)/kernel.bin
OS_IMAGE = os-image.bin

# Build flags
ASM_FLAGS = -f bin
QEMU_FLAGS = -drive format=raw,file=$(OS_IMAGE),index=0,if=floppy -m 512M

.PHONY: all clean run debug

# Default target
all: $(OS_IMAGE)

# Build the complete OS image
$(OS_IMAGE): $(BOOTLOADER) $(KERNEL)
	@echo "Building OS image..."
	# Create bootloader (512 bytes)
	$(DD) if=$(BOOTLOADER) of=$(OS_IMAGE) bs=512 count=1 conv=notrunc
	# Append kernel starting at sector 1
	$(DD) if=$(KERNEL) of=$(OS_IMAGE) bs=512 seek=1 conv=notrunc
	@echo "OS image built successfully: $(OS_IMAGE)"

# Build bootloader
$(BOOTLOADER): $(BOOT_DIR)/test_boot.asm
	@echo "Building bootloader..."
	$(ASM) $(ASM_FLAGS) $(BOOT_DIR)/test_boot.asm -o $(BOOTLOADER)

# Build kernel
$(KERNEL): $(BOOT_DIR)/kernel.asm
	@echo "Building kernel..."
	$(ASM) $(ASM_FLAGS) $(BOOT_DIR)/kernel.asm -o $(KERNEL)

# Run in QEMU
run: $(OS_IMAGE)
	@echo "Starting Kyro OS in QEMU..."
	$(QEMU) $(QEMU_FLAGS)

# Run in QEMU with debugging
debug: $(OS_IMAGE)
	@echo "Starting Kyro OS in QEMU with debugging..."
	$(QEMU) $(QEMU_FLAGS) -s -S -monitor stdio

# Clean build files
clean:
	@echo "Cleaning build files..."
	rm -f $(BOOTLOADER) $(KERNEL) $(OS_IMAGE)
	@echo "Clean complete."

# Show build info
info:
	@echo "Kyro OS Build System"
	@echo "==================="
	@echo "Bootloader: $(BOOTLOADER)"
	@echo "Kernel:     $(KERNEL)"
	@echo "OS Image:   $(OS_IMAGE)"
	@echo ""
	@echo "Available targets:"
	@echo "  all     - Build complete OS image"
	@echo "  run     - Build and run in QEMU"
	@echo "  debug   - Build and run in QEMU with debugging"
	@echo "  clean   - Remove all build files"
	@echo "  info    - Show this information"

# Help target
help: info